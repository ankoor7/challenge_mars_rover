var search_data = {"index":{"searchIndex":["comms","commserror","plateau","rover","roverscontrol","contains()","deploy_rovers()","engage_engine()","execute_instructions()","map_plateau()","new()","new()","new()","new_coord()","parse()","prepare_rovers()","send()","status_report()","to_s()","turn_left()","turn_right()","valid_move?()","answers","created.rid","input"],"longSearchIndex":["comms","commserror","plateau","rover","roverscontrol","plateau#contains()","roverscontrol#deploy_rovers()","rover#engage_engine()","rover#execute_instructions()","roverscontrol#map_plateau()","plateau::new()","rover::new()","roverscontrol::new()","rover#new_coord()","comms#parse()","roverscontrol#prepare_rovers()","comms#send()","roverscontrol#status_report()","rover#to_s()","rover#turn_left()","rover#turn_right()","rover#valid_move?()","","",""],"info":[["Comms","","Comms.html","","<p>Communications\n<p>Communication class to handle data input and output\n"],["CommsError","","CommsError.html","","<p>Communication Error\n<p>This is raised if invalid commands are recieved from HQ\n"],["Plateau","","Plateau.html","","<p>Represents the plateau on which the rovers are placed\n"],["Rover","","Rover.html","","<p>An object class to model a rover on a given plateau. The rover moves\nforward, left and right. It tracks …\n"],["RoversControl","","RoversControl.html","","<p>A controller class to manage a set of rovers on a given plateau. Rovers and\nPlateau  objects are created …\n"],["contains","Plateau","Plateau.html#method-i-contains","(coodinate)","<p>Function to check if a supplied coordinate is on the Plateau. the\ncoordiante is supplied in the format, …\n"],["deploy_rovers","RoversControl","RoversControl.html#method-i-deploy_rovers","()","<p>Deploy all rovers, in turn. Each one will follow it’s latest instructions\n"],["engage_engine","Rover","Rover.html#method-i-engage_engine","()","<p>Moves the rover one square in the current direction it is facing\n"],["execute_instructions","Rover","Rover.html#method-i-execute_instructions","()","<p>Executes the current instruction set\n"],["map_plateau","RoversControl","RoversControl.html#method-i-map_plateau","()","<p>Maps a new plateau with the coordinates supplied in @instructions. Create a\n@plateau object accessible …\n"],["new","Plateau","Plateau.html#method-c-new","(coords)","<p>Assign the supplied coordinates to x and y variables. The function takes\nthe coordinates as an Array …\n"],["new","Rover","Rover.html#method-c-new","(params = {})",""],["new","RoversControl","RoversControl.html#method-c-new","(params = {})","<p>Parse the options hash @instructions is the current instruction set being\nfollowed\n"],["new_coord","Rover","Rover.html#method-i-new_coord","()","<p>Calcualate the new coordinate for a given movement\n"],["parse","Comms","Comms.html#method-i-parse","(file)","<p>Parse instruction file and return an array of single instruction blocks\n"],["prepare_rovers","RoversControl","RoversControl.html#method-i-prepare_rovers","()","<p>Prepare a new set of Rovers with initial positions and routes to follow.\nInstructions are taken from …\n"],["send","Comms","Comms.html#method-i-send","(report)","<p>function to send status reports and output to the NASA. (Or the screen in\nthis case)\n"],["status_report","RoversControl","RoversControl.html#method-i-status_report","()","<p>Create a status report containing the current positions of each rover\n"],["to_s","Rover","Rover.html#method-i-to_s","()","<p>Prints a string suitable for the results\n"],["turn_left","Rover","Rover.html#method-i-turn_left","()","<p>Turns the rover left\n"],["turn_right","Rover","Rover.html#method-i-turn_right","()","<p>Turns the rover right\n"],["valid_move?","Rover","Rover.html#method-i-valid_move-3F","()",""],["answers","","answers_txt.html","","<p>1 3 N 5 1 E\n"],["created.rid","","doc/created_rid.html","",""],["input","","input_txt.html","","<p>5 5 1 2 N LMLMLMLMM 3 3 E MMRMMRMRRM\n"]]}}